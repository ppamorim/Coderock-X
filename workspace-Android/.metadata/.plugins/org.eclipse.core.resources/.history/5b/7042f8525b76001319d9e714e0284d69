package com.example.teste1;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.provider.Telephony.Sms.Conversations;
import android.view.MotionEvent;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class Login extends Activity {
	
	String Email_Base = "1", Password_Base = "2";
	String Email = "", Password = "";
	
	EditText E_Email, E_Password, Resultado;
	Button Entrar, Cadastrar;
	
	double v1, v2, result;
	
 @Override
 	protected void onCreate(Bundle savedInstanceState) {
	// TODO Auto-generated method stub
	super.onCreate(savedInstanceState);
	
	
	setContentView(R.layout.activity_main);
	
	E_Email = (EditText) findViewById(R.id.Email);
	E_Password = (EditText) findViewById(R.id.Senha);
	Entrar = (Button) findViewById(R.id.Entrar);
	Cadastrar = (Button) findViewById(R.id.Register);
	
	
	Entrar.setOnClickListener(new View.OnClickListener() {
		
		@Override
		public void onClick(View v) {

			Email = E_Email.getText().toString();
			Password = E_Password.getText().toString();
			
			//ShowOneButtonDialog(Email,Password);
			if((Email.equals(Email_Base))||(Password.equals(Password_Base))) {
				ShowOneButtonDialog(Email,Password);
			}
		}
	});

 	}
 
 	private void ShowOneButtonDialog(String email,String senha)
 	{
 		AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(this);
 		dialogBuilder.setTitle("Funcionou");
 		dialogBuilder.setMessage(email + " , " + senha);
 		dialogBuilder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int which) {
				Toast.makeText(getApplicationContext(), "Você clicou em OK", Toast.LENGTH_SHORT).show();
				
			}
		});
 		AlertDialog alertDialog = dialogBuilder.create();
 		alertDialog.show();
 	}
 	
 	//Função que esconde o teclado quando se clica na área fora do teclado.
 	@Override
 	public boolean dispatchTouchEvent(MotionEvent event) {
 	View view = getCurrentFocus();
 	boolean ret = super.dispatchTouchEvent(event);

 	if (view instanceof EditText) {
 	    View w = getCurrentFocus();
 	    int scrcoords[] = new int[2];
 	    w.getLocationOnScreen(scrcoords);
 	    float x = event.getRawX() + w.getLeft() - scrcoords[0];
 	    float y = event.getRawY() + w.getTop() - scrcoords[1];

 	    if (event.getAction() == MotionEvent.ACTION_UP 
 	&& (x < w.getLeft() || x >= w.getRight() 
 	|| y < w.getTop() || y > w.getBottom()) ) { 
 	        InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
 	        imm.hideSoftInputFromWindow(getWindow().getCurrentFocus().getWindowToken(), 0);
 	    }
 	}
 	return ret;
 	}
}
